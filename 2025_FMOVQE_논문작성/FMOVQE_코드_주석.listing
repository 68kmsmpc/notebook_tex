def GBBD(mol):
  # 입력 : qiskit 의 molecularinfo 와 같이 분자의 정보를 담고있는 클래스인 MolecularData
  # 이후에 추가 설명
  mol = run_pyscf(mol, run_scf=1, run_fci=0)
  # 3. 2차 정량화 Hamiltonian 얻기
  ham_int = mol.get_molecular_hamiltonian()
  ham_fci = get_fermion_operator(ham_int)
  #H = get_sparse_operator(ham_fci, n_qubits=mol.n_qubits)
  H = get_number_preserving_sparse_operator(
  fermion_op=ham_fci,
  num_qubits=mol.n_qubits,
  num_electrons=mol.n_electrons,       # 필수
  spin_preserving=True ,        # S_z 고정 (필요 없으면 None)
  reference_determinant=None,
  excitation_level=None)
  print(H)
  H_real = H.real
  G = sparse_to_graph(H_real, directed=False, weight="abs", symmetrize=True, tol=0.0)
  ccs = list(nx.connected_components(G))

  sub_mat_idx_g = list(ccs[0])
  H_sub_g = H[sub_mat_idx_g, :][:, sub_mat_idx_g]
  print(H_sub_g)
  eigval_g, eigvec = eigsh(H_sub_g, k=1, which='SA')
  E_g = eigval_g[0]

  sub_mat_idx_e = list(ccs[1])
  H_sub_e = H[sub_mat_idx_e, :][:, sub_mat_idx_e]
  print(H_sub_e)
  eigval_e, eigvec = eigsh(H_sub_e, k=1, which='SA')
  E_e = eigval_e[0]

  return E_g, E_e
